#!/bin/bash
#
# Author: James Cherti
# URL: https://github.com/jamescherti/bash-stdops
#
# Description:
# ------------
# This script automatically sets commonly used permissions for files or
# directories.
#
# License:
# --------
# Copyright (C) 2012-2025 James Cherti
#
# Distributed under terms of the GNU General Public License version 3.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

set -euf -o pipefail

if [[ $# -lt 1 ]]; then
  echo "Automatically set commonly used permissions for files or directories:"
  echo
  echo "Usage: $0 </path/to/file-or-directory> <file2/dir2> <...>"
  echo
  echo "More information:"
  echo "-----------------"
  echo "- If it's a directory: 755"
  echo "- If it's a regular file with a shebang (e.g., ' #!/bin/bash'): 755"
  echo "- If it's a regular file: 644"
  echo
  echo "These permissions follow the principle of least privilege, providing "
  echo "enough access for necessary operations without exposing the "
  echo "files to unnecessary risk."
  exit 1
fi

change_filemod() {
  local file="$2"
  echo "[$1] $file"
  chmod "$1" "$file"
}

change_dirmod() {
  local dir="$2"
  [[ "${dir}" != */ ]] && dir="${dir}/"
  echo "[$1] $dir"
  chmod "$1" "$dir"
}

for TARGET in "$@"; do
  if [[ -d "$TARGET" ]]; then
    change_dirmod 755 "$TARGET"
  elif [[ -f "$TARGET" ]]; then
    if head -n 1 "$TARGET" | grep -q '^#!'; then
      change_filemod 755 "$TARGET"
    else
      change_filemod 644 "$TARGET"
    fi
  else
    echo "[SKIP] $TARGET"
    exit 1
  fi
done
